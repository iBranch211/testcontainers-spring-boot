# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    machine:
      image: circleci/classic:201708-01

#    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx1024m

    steps:
      - add_ssh_keys:
          fingerprints:
            - "ae:b8:4a:86:da:b3:7f:35:f5:62:68:61:d6:29:8b:ac"
      - checkout
      - run:
          name: Run build with tests
          command:  if [[ -z "$RELEASE" ]]; then  mvn clean org.jacoco:jacoco-maven-plugin:prepare-agent install -U -P sonar -nsu --batch-mode -Dmaven.test.redirectTestOutputToFile=true -Dorg.slf4j.simpleLogger.log.org.apache.maven.cli.transfer.Slf4jMavenTransferListener=warn ;fi
      - run:
           name: Save test results
           command: |
                  mkdir -p ~/junit/
                  find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/junit/ \;
                  bash <(curl -s https://codecov.io/bash)
           when: always
      - store_test_results:
            path: ~/junit
      - store_artifacts:
            path: ~/junit
      - run:
            name: Save artifacts
            command: |
                    mkdir -p ~/artifacts/
                    find . -type f -regex ".*/target/.*jar" -exec cp {} ~/artifacts/ \;
            when: always
      - store_test_results:
            path: ~/artifacts
      - store_artifacts:
            path: ~/artifacts
      - run:
          name: Release step
          command: |
                   if [[ -n $RELEASE ]]; then
                       openssl enc -d -aes-256-cbc -in ~/project/.circleci/gpg.playtika.private.enc -out ~/project/.circleci/gpg.playtika.private -k $PGP_SSL  ;
                       gpg --import ~/project/.circleci/gpg.playtika.pub ;
                       gpg --import ~/project/.circleci/gpg.playtika.private ;
                       gpg -k
                       git config --global user.email $GIT_USER_EMAIL ;
                       git config --global user.name "$GIT_USER_NAME" ;
                       mvn -B -P ossrh release:clean release:prepare -Darguments=-Dmaven.test.skip=true -DreleaseVersion=$RELEASE -DdevelopmentVersion=$NEXT ;
                       mvn -B -s  ~/project/.circleci/circleci.settings.xml release:perform ;
                   fi